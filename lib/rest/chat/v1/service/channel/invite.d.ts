/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import deserialize = require('../../../../../base/deserialize');
import serialize = require('../../../../../base/serialize');
import values = require('../../../../../base/values');



declare class InvitePage extends Page {
  /**
   * @constructor Twilio.Chat.V1.ServiceContext.ChannelContext.InvitePage
   * @augments Page
   * @description Initialize the InvitePage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Chat.V1, response: object, solution: object);

  /**
   * Build an instance of InviteInstance
   *
   * @function getInstance
   * @memberof Twilio.Chat.V1.ServiceContext.ChannelContext.InvitePage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}

declare class InviteInstance {
  /**
   * @constructor Twilio.Chat.V1.ServiceContext.ChannelContext.InviteInstance
   * @description Initialize the InviteContext
   *
   * @property sid - A 34 character string that uniquely identifies this resource.
   * @property accountSid - The unique id of the Account[/console] responsible for this member.
   * @property channelSid - The unique id of the Channel for this member.
   * @property serviceSid - The unique id of the Service this member belongs to.
   * @property identity - A unique string identifier for this User in this Service.
   * @property dateCreated - The date that this resource was created.
   * @property dateUpdated - The date that this resource was last updated.
   * @property roleSid - The Role assigned to this member.
   * @property createdBy - The created_by
   * @property url - An absolute URL for this member.
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param serviceSid - The unique id of the Service this member belongs to.
   * @param channelSid - The unique id of the Channel for this member.
   * @param sid - The sid
   */
  constructor(version: Twilio.Chat.V1, payload: object, serviceSid: sid, channelSid: sid, sid: sid);

  _proxy?: InviteContext;
  /**
   * fetch a InviteInstance
   *
   * @function fetch
   * @memberof Twilio.Chat.V1.ServiceContext.ChannelContext.InviteInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a InviteInstance
   *
   * @function remove
   * @memberof Twilio.Chat.V1.ServiceContext.ChannelContext.InviteInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the InviteInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Chat.V1.ServiceContext.ChannelContext.InviteInstance
   * @instance
   */
  toJSON();
}

declare class InviteContext {
  /**
   * @constructor Twilio.Chat.V1.ServiceContext.ChannelContext.InviteContext
   * @description Initialize the InviteContext
   *
   * @param version - Version of the resource
   * @param serviceSid - The service_sid
   * @param channelSid - The channel_sid
   * @param sid - The sid
   */
  constructor(version: Twilio.Chat.V1, serviceSid: sid, channelSid: sid_like, sid: sid);

  /**
   * fetch a InviteInstance
   *
   * @function fetch
   * @memberof Twilio.Chat.V1.ServiceContext.ChannelContext.InviteContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a InviteInstance
   *
   * @function remove
   * @memberof Twilio.Chat.V1.ServiceContext.ChannelContext.InviteContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
}

export { InviteContext, InviteInstance, InviteList, InvitePage }
