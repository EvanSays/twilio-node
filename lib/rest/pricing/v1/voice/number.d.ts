/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import Response = require('../../../../http/response');
import V1 = require('../../V1');
import { SerializableClass } from '../../../../interfaces';

declare function NumberList(version: V1): NumberListInstance

interface NumberResource {
  /**
   * Name of the country
   */
  country: string;
  /**
   * See [InboundCallPrice](https://www.twilio.com/docs/voice/pricing#inbound-call-price) record (returned as null if the Phone Number provided is not a Twilio number owned by this account)
   */
  inbound_call_price: string;
  /**
   * The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
   */
  iso_country: string;
  /**
   * The number
   */
  number: string;
  /**
   * See [OutboundCallPrice](https://www.twilio.com/docs/voice/pricing#outbound-call-price) record
   */
  outbound_call_price: string;
  /**
   * The currency in which prices are measured, in [ISO 4127](http://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
   */
  price_unit: string;
  /**
   * The url
   */
  url: string;
}

interface NumberPayload extends NumberResource, Page.TwilioResponsePayload {
}

interface NumberSolution {
}

interface NumberListInstance {
  /**
   * Gets context of a single Number resource
   *
   * @param number - The number
   */
  (number: string): NumberContext;
  /**
   * Gets context of a single Number resource
   *
   * @param number - The number
   */
  get(number: string): NumberContext;
}

declare class NumberPage extends Page<V1, NumberPayload, NumberResource, NumberInstance> {
  constructor(version: V1, response: Response<string>, solution: NumberSolution);

  /**
   * Build an instance of NumberInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: NumberPayload): NumberInstance;
}

declare class NumberInstance extends SerializableClass {
  /**
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param number - The number
   */
  constructor(version: V1, payload: NumberPayload, number: string);

  private _proxy: NumberContext;
  /**
   * Name of the country
   */
  country: string;
  /**
   * fetch a NumberInstance
   *
   * @returns Promise that resolves to processed NumberInstance
   */
  fetch(): Promise<NumberInstance>;
  /**
   * fetch a NumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: NumberInstance) => any): void;
  /**
   * See [InboundCallPrice](https://www.twilio.com/docs/voice/pricing#inbound-call-price) record (returned as null if the Phone Number provided is not a Twilio number owned by this account)
   */
  inboundCallPrice: string;
  /**
   * The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
   */
  isoCountry: string;
  /**
   * The number
   */
  number: string;
  /**
   * See [OutboundCallPrice](https://www.twilio.com/docs/voice/pricing#outbound-call-price) record
   */
  outboundCallPrice: string;
  /**
   * The currency in which prices are measured, in [ISO 4127](http://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
   */
  priceUnit: string;
  /**
   * The url
   */
  url: string;
}

declare class NumberContext {
  constructor(version: V1, number: string);

  /**
   * fetch a NumberInstance
   *
   * @returns Promise that resolves to processed NumberInstance
   */
  fetch(): Promise<NumberInstance>;
  /**
   * fetch a NumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: NumberInstance) => any): void;
}

export { NumberContext, NumberInstance, NumberList, NumberListInstance, NumberPage, NumberPayload, NumberResource, NumberSolution }
