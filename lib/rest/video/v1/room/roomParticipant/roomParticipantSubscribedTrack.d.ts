/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import Response = require('../../../../../http/response');
import V1 = require('../../../V1');
import serialize = require('../../../../../base/serialize');
import { ListEachOptions, ListOptions, PageOptions } from '../../../../../interfaces';
import { SerializableClass } from '../../../../../interfaces';

/**
 * @description Initialize the SubscribedTrackList
 *
 * @param version - Version of the resource
 * @param roomSid - The room_sid
 * @param subscriberSid - The subscriber_sid
 */
declare function SubscribedTrackList(version: V1, roomSid: string, subscriberSid: string): SubscribedTrackListInstance;

interface SubscribedTrackResource {
  date_created: Date;
  date_updated: Date;
  enabled: boolean;
  kind: SubscribedTrackKind;
  name: string;
  publisher_sid: string;
  room_sid: string;
  sid: string;
  subscriber_sid: string;
}

interface SubscribedTrackPayload extends SubscribedTrackResource, Page.TwilioResponsePayload {
}

interface SubscribedTrackSolution {
  roomSid?: string;
  subscriberSid?: string;
}

interface SubscribedTrackListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): SubscribedTrackContext;
  /**
   * Streams SubscribedTrackInstance records from the API.
   *
   * This operation lazily loads records as efficiently as possible until the limit
   * is reached.
   *
   * The results are passed into the callback function, so this operation is memory efficient.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function each
   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribedTrackList
   * @instance
   *
   * @param opts - ...
   * @param callback - Function to process each record
   */
  each(opts?: object, callback?: Function);
  /**
   * Retrieve a single target page of SubscribedTrackInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function getPage
   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribedTrackList
   * @instance
   *
   * @param targetUrl - API-generated URL for the requested results page
   * @param callback - Callback to handle list of records
   */
  getPage(targetUrl?: string, callback?: function);
  /**
   * @description Lists SubscribedTrackInstance records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function list
   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribedTrackList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  list(opts?: object, callback?: function);
  /**
   * Retrieve a single page of SubscribedTrackInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function page
   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribedTrackList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  page(opts?: object, callback?: function);
  /**
   * update a SubscribedTrackInstance
   *
   * @function update
   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribedTrackList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}


declare class SubscribedTrackPage extends Page {
  /**
   * @constructor Twilio.Video.V1.RoomContext.ParticipantContext.SubscribedTrackPage
   * @augments Page
   * @description Initialize the SubscribedTrackPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Video.V1, response: Response<string>, solution: object);

  /**
   * Build an instance of SubscribedTrackInstance
   *
   * @function getInstance
   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribedTrackPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class SubscribedTrackInstance {
  /**
   * @constructor Twilio.Video.V1.RoomContext.ParticipantContext.SubscribedTrackInstance
   * @description Initialize the SubscribedTrackContext
   *
   * @property sid - The sid
   * @property roomSid - The room_sid
   * @property name - The name
   * @property publisherSid - The publisher_sid
   * @property subscriberSid - The subscriber_sid
   * @property dateCreated - The date_created
   * @property dateUpdated - The date_updated
   * @property enabled - The enabled
   * @property kind - The kind
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param roomSid - The room_sid
   * @param subscriberSid - The subscriber_sid
   */
  constructor(version: Twilio.Video.V1, payload: object, roomSid: sid, subscriberSid: sid);

  /**
   * Produce a plain JSON object version of the SubscribedTrackInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribedTrackInstance
   * @instance
   */
  toJSON();
}

export { SubscribedTrackInstance, SubscribedTrackList, SubscribedTrackListInstance, SubscribedTrackPage, SubscribedTrackPayload, SubscribedTrackResource, SubscribedTrackSolution }
