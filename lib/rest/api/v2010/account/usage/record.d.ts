/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import deserialize = require('../../../../../base/deserialize');
import serialize = require('../../../../../base/serialize');
import values = require('../../../../../base/values');
import { AllTimeList } from './record/allTime';
import { DailyList } from './record/daily';
import { LastMonthList } from './record/lastMonth';
import { MonthlyList } from './record/monthly';
import { ThisMonthList } from './record/thisMonth';
import { TodayList } from './record/today';
import { YearlyList } from './record/yearly';
import { YesterdayList } from './record/yesterday';



declare class RecordPage extends Page {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.UsageContext.RecordPage
   * @augments Page
   * @description Initialize the RecordPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Api.V2010, response: object, solution: object);

  /**
   * Build an instance of RecordInstance
   *
   * @function getInstance
   * @memberof Twilio.Api.V2010.AccountContext.UsageContext.RecordPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}

declare class RecordInstance {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.UsageContext.RecordInstance
   * @description Initialize the RecordContext
   *
   * @property accountSid - The Account that accrued the usage
   * @property apiVersion - The api_version
   * @property category - The category of usage
   * @property count - The number of usage events (e.g. the number of calls).
   * @property countUnit - The unit in which `Count` is measured
   * @property description - A human-readable description of the usage category.
   * @property endDate - The last date usage is included in this record
   * @property price - The total price of the usage
   * @property priceUnit - The currency in which `Price` is measured
   * @property startDate - The first date usage is included in this record
   * @property subresourceUris - Subresources Uris for this UsageRecord
   * @property uri - The URI for this resource
   * @property usage - The amount of usage
   * @property usageUnit - The units in which `Usage` is measured
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - A 34 character string that uniquely identifies this resource.
   */
  constructor(version: Twilio.Api.V2010, payload: object, accountSid: sid);

  /**
   * Produce a plain JSON object version of the RecordInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Api.V2010.AccountContext.UsageContext.RecordInstance
   * @instance
   */
  toJSON();
}

export { RecordInstance, RecordList, RecordPage }
