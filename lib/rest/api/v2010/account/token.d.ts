/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import Response = require('../../../../http/response');
import V2010 = require('../../V2010');
import { SerializableClass } from '../../../../interfaces';

/**
 * @description Initialize the TokenList
 *
 * @param version - Version of the resource
 * @param accountSid - The unique sid that identifies this account
 */
declare function TokenList(version: V2010, accountSid: string): TokenListInstance;

interface TokenResource {
  account_sid: string;
  date_created: Date;
  date_updated: Date;
  ice_servers: string;
  password: string;
  ttl: string;
  username: string;
}

interface TokenPayload extends TokenResource, Page.TwilioResponsePayload {
}

interface TokenSolution {
  accountSid?: string;
}

interface TokenListInstance {
  /**
   * create a TokenInstance
   *
   * @function create
   * @memberof Twilio.Api.V2010.AccountContext.TokenList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  create(opts?: object, callback?: function);
}


declare class TokenPage extends Page {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.TokenPage
   * @augments Page
   * @description Initialize the TokenPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Api.V2010, response: Response<string>, solution: object);

  /**
   * Build an instance of TokenInstance
   *
   * @function getInstance
   * @memberof Twilio.Api.V2010.AccountContext.TokenPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class TokenInstance {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.TokenInstance
   * @description Initialize the TokenContext
   *
   * @property accountSid - The unique sid that identifies this account
   * @property dateCreated - The date this resource was created
   * @property dateUpdated - The date this resource was last updated
   * @property iceServers - An array representing the ephemeral credentials
   * @property password - The temporary password used for authenticating
   * @property ttl - The duration in seconds the credentials are valid
   * @property username - The temporary username that uniquely identifies a Token.
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - The unique sid that identifies this account
   */
  constructor(version: Twilio.Api.V2010, payload: object, accountSid: sid);

  /**
   * Produce a plain JSON object version of the TokenInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Api.V2010.AccountContext.TokenInstance
   * @instance
   */
  toJSON();
}

export { TokenInstance, TokenList, TokenListInstance, TokenPage, TokenPayload, TokenResource, TokenSolution }
