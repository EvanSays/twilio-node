/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import V2010 = require('../../V2010');
import deserialize = require('../../../../base/deserialize');
import values = require('../../../../base/values');
import { MemberList } from './queue/member';

/**
 * @constructor Twilio.Api.V2010.AccountContext.QueueList
 * @description Initialize the QueueList
 *
 * @param version - Version of the resource
 * @param accountSid - The account_sid
 */
declare function QueueList(version: V2010, accountSid: string): QueueListInstance;

/**
 * Options to pass to update
 *
 * @property friendlyName - A human readable description of the queue
 * @property maxSize - The max number of members allowed in the queue
 */
export interface UpdateOptions {
  friendlyName?: string;
  maxSize?: number;
}

/**
 * Options to pass to update
 *
 * @property friendlyName - A human readable description of the queue
 * @property maxSize - The max number of members allowed in the queue
 */
export interface UpdateOptions {
  friendlyName?: string;
  maxSize?: number;
}


declare class QueuePage extends Page {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.QueuePage
   * @augments Page
   * @description Initialize the QueuePage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Api.V2010, response: object, solution: object);

  /**
   * Build an instance of QueueInstance
   *
   * @function getInstance
   * @memberof Twilio.Api.V2010.AccountContext.QueuePage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class QueueInstance {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.QueueInstance
   * @description Initialize the QueueContext
   *
   * @property accountSid - The account_sid
   * @property averageWaitTime - Average wait time of members in the queue
   * @property currentSize - The count of calls currently in the queue.
   * @property dateCreated - The date_created
   * @property dateUpdated - The date_updated
   * @property friendlyName - A user-provided string that identifies this queue.
   * @property maxSize - The max number of calls allowed in the queue
   * @property sid - A string that uniquely identifies this queue
   * @property uri - The uri
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - The account_sid
   * @param sid - Fetch by unique queue Sid
   */
  constructor(version: Twilio.Api.V2010, payload: object, accountSid: sid, sid: sid);

  _proxy?: QueueContext;
  /**
   * fetch a QueueInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.QueueInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * Access the members
   *
   * @function members
   * @memberof Twilio.Api.V2010.AccountContext.QueueInstance
   * @instance
   */
  members();
  /**
   * remove a QueueInstance
   *
   * @function remove
   * @memberof Twilio.Api.V2010.AccountContext.QueueInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the QueueInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Api.V2010.AccountContext.QueueInstance
   * @instance
   */
  toJSON();
  /**
   * update a QueueInstance
   *
   * @function update
   * @memberof Twilio.Api.V2010.AccountContext.QueueInstance
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}


declare class QueueContext {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.QueueContext
   * @description Initialize the QueueContext
   *
   * @property members - members resource
   *
   * @param version - Version of the resource
   * @param accountSid - The account_sid
   * @param sid - Fetch by unique queue Sid
   */
  constructor(version: Twilio.Api.V2010, accountSid: sid, sid: sid);

  /**
   * fetch a QueueInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.QueueContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  members?: Twilio.Api.V2010.AccountContext.QueueContext.MemberList;
  /**
   * remove a QueueInstance
   *
   * @function remove
   * @memberof Twilio.Api.V2010.AccountContext.QueueContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * update a QueueInstance
   *
   * @function update
   * @memberof Twilio.Api.V2010.AccountContext.QueueContext
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}

export { QueueContext, QueueInstance, QueueList, QueuePage }
