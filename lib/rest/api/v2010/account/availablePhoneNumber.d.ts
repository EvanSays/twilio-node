/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import Response = require('../../../../http/response');
import V2010 = require('../../V2010');
import { ListEachOptions, ListOptions, PageOptions } from '../../../../interfaces';
import { LocalList } from './availablePhoneNumber/local';
import { MachineToMachineList } from './availablePhoneNumber/machineToMachine';
import { MobileList } from './availablePhoneNumber/mobile';
import { NationalList } from './availablePhoneNumber/national';
import { SerializableClass } from '../../../../interfaces';
import { SharedCostList } from './availablePhoneNumber/sharedCost';
import { TollFreeList } from './availablePhoneNumber/tollFree';
import { VoipList } from './availablePhoneNumber/voip';

/**
 * @description Initialize the AvailablePhoneNumberCountryList
 *
 * @param version - Version of the resource
 * @param accountSid - A 34 character string that uniquely identifies this resource.
 */
declare function AvailablePhoneNumberCountryList(version: V2010, accountSid: string): AvailablePhoneNumberCountryListInstance;

interface AvailablePhoneNumberCountryResource {
  beta: boolean;
  country: string;
  country_code: string;
  subresource_uris: string;
  uri: string;
}

interface AvailablePhoneNumberCountryPayload extends AvailablePhoneNumberCountryResource, Page.TwilioResponsePayload {
}

interface AvailablePhoneNumberCountrySolution {
  accountSid?: string;
}

interface AvailablePhoneNumberCountryListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): AvailablePhoneNumberCountryContext;
  /**
   * Streams AvailablePhoneNumberCountryInstance records from the API.
   *
   * This operation lazily loads records as efficiently as possible until the limit
   * is reached.
   *
   * The results are passed into the callback function, so this operation is memory efficient.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function each
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList
   * @instance
   *
   * @param opts - ...
   * @param callback - Function to process each record
   */
  each(opts?: object, callback?: Function);
  /**
   * Constructs a available_phone_number_country
   *
   * @function get
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList
   * @instance
   *
   * @param countryCode - The country_code
   */
  get(countryCode: string);
  /**
   * Retrieve a single target page of AvailablePhoneNumberCountryInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function getPage
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList
   * @instance
   *
   * @param targetUrl - API-generated URL for the requested results page
   * @param callback - Callback to handle list of records
   */
  getPage(targetUrl?: string, callback?: function);
  /**
   * @description Lists AvailablePhoneNumberCountryInstance records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function list
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  list(opts?: object, callback?: function);
  /**
   * Retrieve a single page of AvailablePhoneNumberCountryInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function page
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  page(opts?: object, callback?: function);
}


declare class AvailablePhoneNumberCountryPage extends Page {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryPage
   * @augments Page
   * @description Initialize the AvailablePhoneNumberCountryPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Api.V2010, response: Response<string>, solution: object);

  /**
   * Build an instance of AvailablePhoneNumberCountryInstance
   *
   * @function getInstance
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class AvailablePhoneNumberCountryInstance {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @description Initialize the AvailablePhoneNumberCountryContext
   *
   * @property countryCode - The ISO Country code to lookup phone numbers for.
   * @property country - The country
   * @property uri - The uri
   * @property beta - True if new to Twilio platform.
   * @property subresourceUris - The subresource_uris
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - A 34 character string that uniquely identifies this resource.
   * @param countryCode - The country_code
   */
  constructor(version: Twilio.Api.V2010, payload: object, accountSid: sid, countryCode: iso_country_code);

  _proxy?: AvailablePhoneNumberCountryContext;
  /**
   * fetch a AvailablePhoneNumberCountryInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * Access the local
   *
   * @function local
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @instance
   */
  local();
  /**
   * Access the machineToMachine
   *
   * @function machineToMachine
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @instance
   */
  machineToMachine();
  /**
   * Access the mobile
   *
   * @function mobile
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @instance
   */
  mobile();
  /**
   * Access the national
   *
   * @function national
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @instance
   */
  national();
  /**
   * Access the sharedCost
   *
   * @function sharedCost
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @instance
   */
  sharedCost();
  /**
   * Produce a plain JSON object version of the AvailablePhoneNumberCountryInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @instance
   */
  toJSON();
  /**
   * Access the tollFree
   *
   * @function tollFree
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @instance
   */
  tollFree();
  /**
   * Access the voip
   *
   * @function voip
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryInstance
   * @instance
   */
  voip();
}


declare class AvailablePhoneNumberCountryContext {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryContext
   * @description Initialize the AvailablePhoneNumberCountryContext
   *
   * @property local - local resource
   * @property tollFree - tollFree resource
   * @property mobile - mobile resource
   * @property national - national resource
   * @property voip - voip resource
   * @property sharedCost - sharedCost resource
   * @property machineToMachine - machineToMachine resource
   *
   * @param version - Version of the resource
   * @param accountSid - The account_sid
   * @param countryCode - The country_code
   */
  constructor(version: Twilio.Api.V2010, accountSid: sid, countryCode: iso_country_code);

  /**
   * fetch a AvailablePhoneNumberCountryInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  local?: Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryContext.LocalList;
  machineToMachine?: Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryContext.MachineToMachineList;
  mobile?: Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryContext.MobileList;
  national?: Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryContext.NationalList;
  sharedCost?: Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryContext.SharedCostList;
  tollFree?: Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryContext.TollFreeList;
  voip?: Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryContext.VoipList;
}

export { AvailablePhoneNumberCountryContext, AvailablePhoneNumberCountryInstance, AvailablePhoneNumberCountryList, AvailablePhoneNumberCountryListInstance, AvailablePhoneNumberCountryPage, AvailablePhoneNumberCountryPayload, AvailablePhoneNumberCountryResource, AvailablePhoneNumberCountrySolution }
