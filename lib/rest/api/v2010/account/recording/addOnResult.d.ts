/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import Response = require('../../../../../http/response');
import V2010 = require('../../../V2010');
import { ListEachOptions, ListOptions, PageOptions } from '../../../../../interfaces';
import { PayloadList } from './addOnResult/payload';
import { SerializableClass } from '../../../../../interfaces';

/**
 * @description Initialize the AddOnResultList
 *
 * @param version - Version of the resource
 * @param accountSid - The unique sid that identifies this account
 * @param referenceSid - A string that uniquely identifies the recording.
 */
declare function AddOnResultList(version: V2010, accountSid: string, referenceSid: string): AddOnResultListInstance;

interface AddOnResultResource {
  account_sid: string;
  add_on_configuration_sid: string;
  add_on_sid: string;
  date_completed: Date;
  date_created: Date;
  date_updated: Date;
  reference_sid: string;
  sid: string;
  status: AddOnResultStatus;
  subresource_uris: string;
}

interface AddOnResultPayload extends AddOnResultResource, Page.TwilioResponsePayload {
}

interface AddOnResultSolution {
  accountSid?: string;
  referenceSid?: string;
}

interface AddOnResultListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): AddOnResultContext;
  /**
   * Streams AddOnResultInstance records from the API.
   *
   * This operation lazily loads records as efficiently as possible until the limit
   * is reached.
   *
   * The results are passed into the callback function, so this operation is memory efficient.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function each
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultList
   * @instance
   *
   * @param opts - ...
   * @param callback - Function to process each record
   */
  each(opts?: object, callback?: Function);
  /**
   * Constructs a add_on_result
   *
   * @function get
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultList
   * @instance
   *
   * @param sid - Fetch by unique result Sid
   */
  get(sid: string);
  /**
   * Retrieve a single target page of AddOnResultInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function getPage
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultList
   * @instance
   *
   * @param targetUrl - API-generated URL for the requested results page
   * @param callback - Callback to handle list of records
   */
  getPage(targetUrl?: string, callback?: function);
  /**
   * @description Lists AddOnResultInstance records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function list
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  list(opts?: object, callback?: function);
  /**
   * Retrieve a single page of AddOnResultInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function page
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  page(opts?: object, callback?: function);
}


declare class AddOnResultPage extends Page {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultPage
   * @augments Page
   * @description Initialize the AddOnResultPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Api.V2010, response: Response<string>, solution: object);

  /**
   * Build an instance of AddOnResultInstance
   *
   * @function getInstance
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class AddOnResultInstance {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultInstance
   * @description Initialize the AddOnResultContext
   *
   * @property sid - A string that uniquely identifies this result
   * @property accountSid - The unique sid that identifies this account
   * @property status - The status of this result.
   * @property addOnSid - A string that uniquely identifies the Add-on.
   * @property addOnConfigurationSid - A string that uniquely identifies the Add-on configuration.
   * @property dateCreated - The date this resource was created
   * @property dateUpdated - The date this resource was last updated
   * @property dateCompleted - The date this result was completed.
   * @property referenceSid - A string that uniquely identifies the recording.
   * @property subresourceUris - A dictionary of URIs for related resources
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - The unique sid that identifies this account
   * @param referenceSid - A string that uniquely identifies the recording.
   * @param sid - Fetch by unique result Sid
   */
  constructor(version: Twilio.Api.V2010, payload: object, accountSid: sid, referenceSid: sid, sid: sid);

  _proxy?: AddOnResultContext;
  /**
   * fetch a AddOnResultInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * Access the payloads
   *
   * @function payloads
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultInstance
   * @instance
   */
  payloads();
  /**
   * remove a AddOnResultInstance
   *
   * @function remove
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the AddOnResultInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultInstance
   * @instance
   */
  toJSON();
}


declare class AddOnResultContext {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultContext
   * @description Initialize the AddOnResultContext
   *
   * @property payloads - payloads resource
   *
   * @param version - Version of the resource
   * @param accountSid - The account_sid
   * @param referenceSid - The reference_sid
   * @param sid - Fetch by unique result Sid
   */
  constructor(version: Twilio.Api.V2010, accountSid: sid, referenceSid: sid, sid: sid);

  /**
   * fetch a AddOnResultInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  payloads?: Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultContext.PayloadList;
  /**
   * remove a AddOnResultInstance
   *
   * @function remove
   * @memberof Twilio.Api.V2010.AccountContext.RecordingContext.AddOnResultContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
}

export { AddOnResultContext, AddOnResultInstance, AddOnResultList, AddOnResultListInstance, AddOnResultPage, AddOnResultPayload, AddOnResultResource, AddOnResultSolution }
