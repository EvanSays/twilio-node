/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import deserialize = require('../../../../base/deserialize');
import serialize = require('../../../../base/serialize');
import values = require('../../../../base/values');
import { AssignedAddOnList } from './incomingPhoneNumber/assignedAddOn';
import { LocalList } from './incomingPhoneNumber/local';
import { MobileList } from './incomingPhoneNumber/mobile';
import { TollFreeList } from './incomingPhoneNumber/tollFree';


/**
 * Options to pass to update
 *
 * @property accountSid - The new owner of the phone number
 * @property apiVersion - The Twilio REST API version to use
 * @property friendlyName - A human readable description of this resource
 * @property smsApplicationSid - Unique string that identifies the application
 * @property smsFallbackMethod - HTTP method used with sms fallback url
 * @property smsFallbackUrl - URL Twilio will request if an error occurs in executing TwiML
 * @property smsMethod - HTTP method to use with sms url
 * @property smsUrl - URL Twilio will request when receiving an SMS
 * @property statusCallback - URL Twilio will use to pass status parameters
 * @property statusCallbackMethod - HTTP method twilio will use with status callback
 * @property voiceApplicationSid - The unique sid of the application to handle this number
 * @property voiceCallerIdLookup - Look up the caller's caller-ID
 * @property voiceFallbackMethod - HTTP method used with fallback_url
 * @property voiceFallbackUrl - URL Twilio will request when an error occurs in TwiML
 * @property voiceMethod - HTTP method used with the voice url
 * @property voiceUrl - URL Twilio will request when receiving a call
 * @property emergencyStatus - The emergency_status
 * @property emergencyAddressSid - The emergency_address_sid
 * @property trunkSid - Unique string to identify the trunk
 * @property voiceReceiveMode - The voice_receive_mode
 * @property identitySid - Unique string that identifies the identity associated with number
 * @property addressSid - Unique string that identifies the address associated with number
 */
export interface UpdateOptions {
  accountSid?: string;
  addressSid?: string;
  apiVersion?: string;
  emergencyAddressSid?: string;
  emergencyStatus?: incoming_phone_number.emergency_status;
  friendlyName?: string;
  identitySid?: string;
  smsApplicationSid?: string;
  smsFallbackMethod?: string;
  smsFallbackUrl?: string;
  smsMethod?: string;
  smsUrl?: string;
  statusCallback?: string;
  statusCallbackMethod?: string;
  trunkSid?: string;
  voiceApplicationSid?: string;
  voiceCallerIdLookup?: boolean;
  voiceFallbackMethod?: string;
  voiceFallbackUrl?: string;
  voiceMethod?: string;
  voiceReceiveMode?: incoming_phone_number.voice_receive_mode;
  voiceUrl?: string;
}

/**
 * Options to pass to update
 *
 * @property accountSid - The new owner of the phone number
 * @property apiVersion - The Twilio REST API version to use
 * @property friendlyName - A human readable description of this resource
 * @property smsApplicationSid - Unique string that identifies the application
 * @property smsFallbackMethod - HTTP method used with sms fallback url
 * @property smsFallbackUrl - URL Twilio will request if an error occurs in executing TwiML
 * @property smsMethod - HTTP method to use with sms url
 * @property smsUrl - URL Twilio will request when receiving an SMS
 * @property statusCallback - URL Twilio will use to pass status parameters
 * @property statusCallbackMethod - HTTP method twilio will use with status callback
 * @property voiceApplicationSid - The unique sid of the application to handle this number
 * @property voiceCallerIdLookup - Look up the caller's caller-ID
 * @property voiceFallbackMethod - HTTP method used with fallback_url
 * @property voiceFallbackUrl - URL Twilio will request when an error occurs in TwiML
 * @property voiceMethod - HTTP method used with the voice url
 * @property voiceUrl - URL Twilio will request when receiving a call
 * @property emergencyStatus - The emergency_status
 * @property emergencyAddressSid - The emergency_address_sid
 * @property trunkSid - Unique string to identify the trunk
 * @property voiceReceiveMode - The voice_receive_mode
 * @property identitySid - Unique string that identifies the identity associated with number
 * @property addressSid - Unique string that identifies the address associated with number
 */
export interface UpdateOptions {
  accountSid?: string;
  addressSid?: string;
  apiVersion?: string;
  emergencyAddressSid?: string;
  emergencyStatus?: incoming_phone_number.emergency_status;
  friendlyName?: string;
  identitySid?: string;
  smsApplicationSid?: string;
  smsFallbackMethod?: string;
  smsFallbackUrl?: string;
  smsMethod?: string;
  smsUrl?: string;
  statusCallback?: string;
  statusCallbackMethod?: string;
  trunkSid?: string;
  voiceApplicationSid?: string;
  voiceCallerIdLookup?: boolean;
  voiceFallbackMethod?: string;
  voiceFallbackUrl?: string;
  voiceMethod?: string;
  voiceReceiveMode?: incoming_phone_number.voice_receive_mode;
  voiceUrl?: string;
}


declare class IncomingPhoneNumberPage extends Page {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage
   * @augments Page
   * @description Initialize the IncomingPhoneNumberPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Api.V2010, response: object, solution: object);

  /**
   * Build an instance of IncomingPhoneNumberInstance
   *
   * @function getInstance
   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}

declare class IncomingPhoneNumberInstance {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance
   * @description Initialize the IncomingPhoneNumberContext
   *
   * @property accountSid - The unique sid that identifies this account
   * @property addressSid - Unique string that identifies the address associated with number
   * @property addressRequirements - Indicates if the customer requires an address
   * @property apiVersion - The Twilio REST API version to use
   * @property beta - Indicates if the phone number is a beta number
   * @property capabilities - Indicate if a phone can receive calls or messages
   * @property dateCreated - The date this resource was created
   * @property dateUpdated - The date this resource was last updated
   * @property friendlyName - A human readable description of this resouce
   * @property identitySid - Unique string that identifies the identity associated with number
   * @property phoneNumber - The incoming phone number
   * @property origin - Twilio owned phone numbers are marked as twilio while hosted phone numbers are marked as hosted.
   * @property sid - A string that uniquely identifies this resource
   * @property smsApplicationSid - Unique string that identifies the application
   * @property smsFallbackMethod - HTTP method used with sms fallback url
   * @property smsFallbackUrl - URL Twilio will request if an error occurs in executing TwiML
   * @property smsMethod - HTTP method to use with sms url
   * @property smsUrl - URL Twilio will request when receiving an SMS
   * @property statusCallback - URL Twilio will use to pass status parameters
   * @property statusCallbackMethod - HTTP method twilio will use with status callback
   * @property trunkSid - Unique string to identify the trunk
   * @property uri - The URI for this resource
   * @property voiceApplicationSid - The unique sid of the application to handle this number
   * @property voiceCallerIdLookup - Look up the caller's caller-ID
   * @property voiceFallbackMethod - HTTP method used with fallback_url
   * @property voiceFallbackUrl - URL Twilio will request when an error occurs in TwiML
   * @property voiceMethod - HTTP method used with the voice url
   * @property voiceUrl - URL Twilio will request when receiving a call
   * @property emergencyStatus - The emergency_status
   * @property emergencyAddressSid - The emergency_address_sid
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - The unique sid that identifies this account
   * @param sid - Fetch by unique incoming-phone-number Sid
   */
  constructor(version: Twilio.Api.V2010, payload: object, accountSid: sid, sid: sid);

  _proxy?: IncomingPhoneNumberContext;
  /**
   * Access the assignedAddOns
   *
   * @function assignedAddOns
   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance
   * @instance
   */
  assignedAddOns();
  /**
   * fetch a IncomingPhoneNumberInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a IncomingPhoneNumberInstance
   *
   * @function remove
   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the IncomingPhoneNumberInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance
   * @instance
   */
  toJSON();
  /**
   * update a IncomingPhoneNumberInstance
   *
   * @function update
   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}

declare class IncomingPhoneNumberContext {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext
   * @description Initialize the IncomingPhoneNumberContext
   *
   * @property assignedAddOns - assignedAddOns resource
   *
   * @param version - Version of the resource
   * @param accountSid - The account_sid
   * @param sid - Fetch by unique incoming-phone-number Sid
   */
  constructor(version: Twilio.Api.V2010, accountSid: sid, sid: sid);

  assignedAddOns?: Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.AssignedAddOnList;
  /**
   * fetch a IncomingPhoneNumberInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a IncomingPhoneNumberInstance
   *
   * @function remove
   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * update a IncomingPhoneNumberInstance
   *
   * @function update
   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}

export { IncomingPhoneNumberContext, IncomingPhoneNumberInstance, IncomingPhoneNumberList, IncomingPhoneNumberPage }
