/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import V2010 = require('../../V2010');
import deserialize = require('../../../../base/deserialize');
import values = require('../../../../base/values');

/**
 * @description Initialize the TranscriptionList
 *
 * @param version - Version of the resource
 * @param accountSid - The unique sid that identifies this account
 */
declare function TranscriptionList(version: V2010, accountSid: string): TranscriptionListInstance;


declare class TranscriptionPage extends Page {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.TranscriptionPage
   * @augments Page
   * @description Initialize the TranscriptionPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Api.V2010, response: object, solution: object);

  /**
   * Build an instance of TranscriptionInstance
   *
   * @function getInstance
   * @memberof Twilio.Api.V2010.AccountContext.TranscriptionPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class TranscriptionInstance {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.TranscriptionInstance
   * @description Initialize the TranscriptionContext
   *
   * @property accountSid - The unique sid that identifies this account
   * @property apiVersion - The api_version
   * @property dateCreated - The date this resource was created
   * @property dateUpdated - The date this resource was last updated
   * @property duration - The duration of the transcribed audio, in seconds.
   * @property price - The charge for this transcription
   * @property priceUnit - The currency in which Price is measured
   * @property recordingSid - The string that uniquely identifies the recording
   * @property sid - A string that uniquely identifies this transcription
   * @property status - The status of the transcription
   * @property transcriptionText - The text content of the transcription.
   * @property type - The type
   * @property uri - The URI for this resource
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - The unique sid that identifies this account
   * @param sid - Fetch by unique transcription SID
   */
  constructor(version: Twilio.Api.V2010, payload: object, accountSid: sid, sid: sid);

  _proxy?: TranscriptionContext;
  /**
   * fetch a TranscriptionInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.TranscriptionInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a TranscriptionInstance
   *
   * @function remove
   * @memberof Twilio.Api.V2010.AccountContext.TranscriptionInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the TranscriptionInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Api.V2010.AccountContext.TranscriptionInstance
   * @instance
   */
  toJSON();
}


declare class TranscriptionContext {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.TranscriptionContext
   * @description Initialize the TranscriptionContext
   *
   * @param version - Version of the resource
   * @param accountSid - The account_sid
   * @param sid - Fetch by unique transcription SID
   */
  constructor(version: Twilio.Api.V2010, accountSid: sid, sid: sid);

  /**
   * fetch a TranscriptionInstance
   *
   * @function fetch
   * @memberof Twilio.Api.V2010.AccountContext.TranscriptionContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a TranscriptionInstance
   *
   * @function remove
   * @memberof Twilio.Api.V2010.AccountContext.TranscriptionContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
}

export { TranscriptionContext, TranscriptionInstance, TranscriptionList, TranscriptionPage }
