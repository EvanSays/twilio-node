/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import Response = require('../../../../http/response');
import V1 = require('../../V1');
import serialize = require('../../../../base/serialize');
import { DocumentPermissionList } from './document/documentPermission';
import { ListEachOptions, ListOptions, PageOptions } from '../../../../interfaces';
import { SerializableClass } from '../../../../interfaces';

/**
 * @description Initialize the DocumentList
 * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
 *
 * @param version - Version of the resource
 * @param serviceSid - The unique SID identifier of the Service Instance that hosts this Document.
 */
declare function DocumentList(version: V1, serviceSid: string): DocumentListInstance;

interface DocumentResource {
  account_sid: string;
  created_by: string;
  data: string;
  date_created: Date;
  date_expires: Date;
  date_updated: Date;
  links: string;
  revision: string;
  service_sid: string;
  sid: string;
  unique_name: string;
  url: string;
}

interface DocumentPayload extends DocumentResource, Page.TwilioResponsePayload {
}

interface DocumentSolution {
  serviceSid?: string;
}

interface DocumentListInstance {
  /**
   * @param sid - sid of instance
   */
  DocumentListInstance(sid: string);
  /**
   * create a DocumentInstance
   *
   * @function create
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  create(opts?: object, callback?: function);
  /**
   * Streams DocumentInstance records from the API.
   *
   * This operation lazily loads records as efficiently as possible until the limit
   * is reached.
   *
   * The results are passed into the callback function, so this operation is memory efficient.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function each
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentList
   * @instance
   *
   * @param opts - ...
   * @param callback - Function to process each record
   */
  each(opts?: object, callback?: Function);
  /**
   * Constructs a document
   *
   * @function get
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentList
   * @instance
   *
   * @param sid - The sid
   */
  get(sid: string);
  /**
   * Retrieve a single target page of DocumentInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function getPage
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentList
   * @instance
   *
   * @param targetUrl - API-generated URL for the requested results page
   * @param callback - Callback to handle list of records
   */
  getPage(targetUrl?: string, callback?: function);
  /**
   * @description Lists DocumentInstance records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function list
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  list(opts?: object, callback?: function);
  /**
   * Retrieve a single page of DocumentInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function page
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  page(opts?: object, callback?: function);
}

/**
 * Options to pass to update
 *
 * @property data - Contains an arbitrary JSON object to be stored in this Document.
 * @property ttl - New time-to-live of this Document in seconds.
 */
export interface UpdateOptions {
  data?: string;
  ttl?: number;
}

/**
 * Options to pass to update
 *
 * @property data - Contains an arbitrary JSON object to be stored in this Document.
 * @property ttl - New time-to-live of this Document in seconds.
 */
export interface UpdateOptions {
  data?: string;
  ttl?: number;
}


declare class DocumentPage extends Page {
  /**
   * @constructor Twilio.Sync.V1.ServiceContext.DocumentPage
   * @augments Page
   * @description Initialize the DocumentPage
   * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Sync.V1, response: Response<string>, solution: object);

  /**
   * Build an instance of DocumentInstance
   *
   * @function getInstance
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class DocumentInstance {
  /**
   * @constructor Twilio.Sync.V1.ServiceContext.DocumentInstance
   * @description Initialize the DocumentContext
   * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
   *
   * @property sid - The unique 34-character SID identifier of the Document.
   * @property uniqueName - The unique and addressable name of this Document.
   * @property accountSid - The unique SID identifier of the Twilio Account.
   * @property serviceSid - The unique SID identifier of the Service Instance that hosts this Document.
   * @property url - The absolute URL for this Document.
   * @property links - A dictionary of URL links to nested resources of this Document.
   * @property revision - Contains the current revision of this Document, represented by a string identifier.
   * @property data - Contains arbitrary user-defined, schema-less data that this Document stores, represented by a JSON object, up to 16KB.
   * @property dateExpires - Contains the date this Document expires and gets deleted automatically.
   * @property dateCreated - The date this Document was created, given in UTC ISO 8601 format.
   * @property dateUpdated - Specifies the date this Document was last updated, given in UTC ISO 8601 format.
   * @property createdBy - The identity of the Document creator.
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param serviceSid - The unique SID identifier of the Service Instance that hosts this Document.
   * @param sid - The sid
   */
  constructor(version: Twilio.Sync.V1, payload: object, serviceSid: sid, sid: sid_like);

  _proxy?: DocumentContext;
  /**
   * Access the documentPermissions
   *
   * @function documentPermissions
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentInstance
   * @instance
   */
  documentPermissions();
  /**
   * fetch a DocumentInstance
   *
   * @function fetch
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a DocumentInstance
   *
   * @function remove
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the DocumentInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentInstance
   * @instance
   */
  toJSON();
  /**
   * update a DocumentInstance
   *
   * @function update
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentInstance
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}


declare class DocumentContext {
  /**
   * @constructor Twilio.Sync.V1.ServiceContext.DocumentContext
   * @description Initialize the DocumentContext
   * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
   *
   * @property documentPermissions - documentPermissions resource
   *
   * @param version - Version of the resource
   * @param serviceSid - The service_sid
   * @param sid - The sid
   */
  constructor(version: Twilio.Sync.V1, serviceSid: sid_like, sid: sid_like);

  documentPermissions?: Twilio.Sync.V1.ServiceContext.DocumentContext.DocumentPermissionList;
  /**
   * fetch a DocumentInstance
   *
   * @function fetch
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a DocumentInstance
   *
   * @function remove
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * update a DocumentInstance
   *
   * @function update
   * @memberof Twilio.Sync.V1.ServiceContext.DocumentContext
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}

export { DocumentContext, DocumentInstance, DocumentList, DocumentListInstance, DocumentPage, DocumentPayload, DocumentResource, DocumentSolution }
