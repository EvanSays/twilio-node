/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import V1 = require('../../../V1');
import deserialize = require('../../../../../base/deserialize');
import values = require('../../../../../base/values');
import { MessageInteractionList } from './participant/messageInteraction';

/**
 * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList
 * @description Initialize the ParticipantList
 * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
 *
 * @param version - Version of the resource
 * @param serviceSid - Service Sid.
 * @param sessionSid - Session Sid.
 */
declare function ParticipantList(version: V1, serviceSid: string, sessionSid: string): ParticipantListInstance;


declare class ParticipantPage extends Page {
  /**
   * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantPage
   * @augments Page
   * @description Initialize the ParticipantPage
   * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Proxy.V1, response: object, solution: object);

  /**
   * Build an instance of ParticipantInstance
   *
   * @function getInstance
   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class ParticipantInstance {
  /**
   * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance
   * @description Initialize the ParticipantContext
   * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
   *
   * @property sid - A string that uniquely identifies this Participant.
   * @property sessionSid - Session Sid.
   * @property serviceSid - Service Sid.
   * @property accountSid - Account Sid.
   * @property friendlyName - A human-readable description of this resource.
   * @property identifier - The phone number of this Participant.
   * @property proxyIdentifier - Proxy Identifier.
   * @property proxyIdentifierSid - Proxy Identifier Sid.
   * @property dateDeleted - The date this Participant was removed
   * @property dateCreated - The date this Participant was created
   * @property dateUpdated - The date this Participant was last updated
   * @property url - The URL of this resource.
   * @property links - Nested resource URLs.
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param serviceSid - Service Sid.
   * @param sessionSid - Session Sid.
   * @param sid - A string that uniquely identifies this Participant.
   */
  constructor(version: Twilio.Proxy.V1, payload: object, serviceSid: sid, sessionSid: sid, sid: sid);

  _proxy?: ParticipantContext;
  /**
   * fetch a ParticipantInstance
   *
   * @function fetch
   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * Access the messageInteractions
   *
   * @function messageInteractions
   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance
   * @instance
   */
  messageInteractions();
  /**
   * remove a ParticipantInstance
   *
   * @function remove
   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the ParticipantInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance
   * @instance
   */
  toJSON();
}


declare class ParticipantContext {
  /**
   * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext
   * @description Initialize the ParticipantContext
   * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
   *
   * @property messageInteractions - messageInteractions resource
   *
   * @param version - Version of the resource
   * @param serviceSid - Service Sid.
   * @param sessionSid - Session Sid.
   * @param sid - A string that uniquely identifies this Participant.
   */
  constructor(version: Twilio.Proxy.V1, serviceSid: sid, sessionSid: sid, sid: sid);

  /**
   * fetch a ParticipantInstance
   *
   * @function fetch
   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  messageInteractions?: Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext.MessageInteractionList;
  /**
   * remove a ParticipantInstance
   *
   * @function remove
   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
}

export { ParticipantContext, ParticipantInstance, ParticipantList, ParticipantPage }
