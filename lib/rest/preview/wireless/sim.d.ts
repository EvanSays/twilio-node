/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../base/Page');
import Wireless = require('../Wireless');
import deserialize = require('../../../base/deserialize');
import values = require('../../../base/values');
import { UsageList } from './sim/usage';

/**
 * @constructor Twilio.Preview.Wireless.SimList
 * @description Initialize the SimList
 * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
 *
 * @param version - Version of the resource
 */
declare function SimList(version: Wireless): SimListInstance;

/**
 * Options to pass to update
 *
 * @property uniqueName - The unique_name
 * @property callbackMethod - The callback_method
 * @property callbackUrl - The callback_url
 * @property friendlyName - The friendly_name
 * @property ratePlan - The rate_plan
 * @property status - The status
 * @property commandsCallbackMethod - The commands_callback_method
 * @property commandsCallbackUrl - The commands_callback_url
 * @property smsFallbackMethod - The sms_fallback_method
 * @property smsFallbackUrl - The sms_fallback_url
 * @property smsMethod - The sms_method
 * @property smsUrl - The sms_url
 * @property voiceFallbackMethod - The voice_fallback_method
 * @property voiceFallbackUrl - The voice_fallback_url
 * @property voiceMethod - The voice_method
 * @property voiceUrl - The voice_url
 */
export interface UpdateOptions {
  callbackMethod?: string;
  callbackUrl?: string;
  commandsCallbackMethod?: string;
  commandsCallbackUrl?: string;
  friendlyName?: string;
  ratePlan?: string;
  smsFallbackMethod?: string;
  smsFallbackUrl?: string;
  smsMethod?: string;
  smsUrl?: string;
  status?: string;
  uniqueName?: string;
  voiceFallbackMethod?: string;
  voiceFallbackUrl?: string;
  voiceMethod?: string;
  voiceUrl?: string;
}

/**
 * Options to pass to update
 *
 * @property uniqueName - The unique_name
 * @property callbackMethod - The callback_method
 * @property callbackUrl - The callback_url
 * @property friendlyName - The friendly_name
 * @property ratePlan - The rate_plan
 * @property status - The status
 * @property commandsCallbackMethod - The commands_callback_method
 * @property commandsCallbackUrl - The commands_callback_url
 * @property smsFallbackMethod - The sms_fallback_method
 * @property smsFallbackUrl - The sms_fallback_url
 * @property smsMethod - The sms_method
 * @property smsUrl - The sms_url
 * @property voiceFallbackMethod - The voice_fallback_method
 * @property voiceFallbackUrl - The voice_fallback_url
 * @property voiceMethod - The voice_method
 * @property voiceUrl - The voice_url
 */
export interface UpdateOptions {
  callbackMethod?: string;
  callbackUrl?: string;
  commandsCallbackMethod?: string;
  commandsCallbackUrl?: string;
  friendlyName?: string;
  ratePlan?: string;
  smsFallbackMethod?: string;
  smsFallbackUrl?: string;
  smsMethod?: string;
  smsUrl?: string;
  status?: string;
  uniqueName?: string;
  voiceFallbackMethod?: string;
  voiceFallbackUrl?: string;
  voiceMethod?: string;
  voiceUrl?: string;
}


declare class SimPage extends Page {
  /**
   * @constructor Twilio.Preview.Wireless.SimPage
   * @augments Page
   * @description Initialize the SimPage
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Preview.Wireless, response: object, solution: object);

  /**
   * Build an instance of SimInstance
   *
   * @function getInstance
   * @memberof Twilio.Preview.Wireless.SimPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class SimInstance {
  /**
   * @constructor Twilio.Preview.Wireless.SimInstance
   * @description Initialize the SimContext
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @property sid - The sid
   * @property uniqueName - The unique_name
   * @property accountSid - The account_sid
   * @property ratePlanSid - The rate_plan_sid
   * @property friendlyName - The friendly_name
   * @property iccid - The iccid
   * @property eId - The e_id
   * @property status - The status
   * @property commandsCallbackUrl - The commands_callback_url
   * @property commandsCallbackMethod - The commands_callback_method
   * @property smsFallbackMethod - The sms_fallback_method
   * @property smsFallbackUrl - The sms_fallback_url
   * @property smsMethod - The sms_method
   * @property smsUrl - The sms_url
   * @property voiceFallbackMethod - The voice_fallback_method
   * @property voiceFallbackUrl - The voice_fallback_url
   * @property voiceMethod - The voice_method
   * @property voiceUrl - The voice_url
   * @property dateCreated - The date_created
   * @property dateUpdated - The date_updated
   * @property url - The url
   * @property links - The links
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param sid - The sid
   */
  constructor(version: Twilio.Preview.Wireless, payload: object, sid: sid_like);

  _proxy?: SimContext;
  /**
   * fetch a SimInstance
   *
   * @function fetch
   * @memberof Twilio.Preview.Wireless.SimInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * Produce a plain JSON object version of the SimInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Preview.Wireless.SimInstance
   * @instance
   */
  toJSON();
  /**
   * update a SimInstance
   *
   * @function update
   * @memberof Twilio.Preview.Wireless.SimInstance
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
  /**
   * Access the usage
   *
   * @function usage
   * @memberof Twilio.Preview.Wireless.SimInstance
   * @instance
   */
  usage();
}


declare class SimContext {
  /**
   * @constructor Twilio.Preview.Wireless.SimContext
   * @description Initialize the SimContext
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @property usage - usage resource
   *
   * @param version - Version of the resource
   * @param sid - The sid
   */
  constructor(version: Twilio.Preview.Wireless, sid: sid_like);

  /**
   * fetch a SimInstance
   *
   * @function fetch
   * @memberof Twilio.Preview.Wireless.SimContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * update a SimInstance
   *
   * @function update
   * @memberof Twilio.Preview.Wireless.SimContext
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
  usage?: Twilio.Preview.Wireless.SimContext.UsageList;
}

export { SimContext, SimInstance, SimList, SimPage }
