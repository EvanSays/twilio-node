/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import Response = require('../../../../../http/response');
import Understand = require('../../../Understand');
import { ListEachOptions, ListOptions, PageOptions } from '../../../../../interfaces';
import { SerializableClass } from '../../../../../interfaces';

/**
 * @description Initialize the SampleList
 * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
 *
 * @param version - Version of the resource
 * @param assistantSid - The unique ID of the Assistant.
 * @param intentSid - The unique ID of the Intent associated with this Sample.
 */
declare function SampleList(version: Understand, assistantSid: string, intentSid: string): SampleListInstance;

interface SampleResource {
  account_sid: string;
  assistant_sid: string;
  date_created: Date;
  date_updated: Date;
  intent_sid: string;
  language: string;
  sid: string;
  source_channel: string;
  tagged_text: string;
  url: string;
}

interface SamplePayload extends SampleResource, Page.TwilioResponsePayload {
}

interface SampleSolution {
  assistantSid?: string;
  intentSid?: string;
}

interface SampleListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): SampleContext;
  /**
   * create a SampleInstance
   *
   * @function create
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  create(opts: object, callback?: function);
  /**
   * Streams SampleInstance records from the API.
   *
   * This operation lazily loads records as efficiently as possible until the limit
   * is reached.
   *
   * The results are passed into the callback function, so this operation is memory efficient.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function each
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleList
   * @instance
   *
   * @param opts - ...
   * @param callback - Function to process each record
   */
  each(opts?: object, callback?: Function);
  /**
   * Constructs a sample
   *
   * @function get
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleList
   * @instance
   *
   * @param sid - The sid
   */
  get(sid: string);
  /**
   * Retrieve a single target page of SampleInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function getPage
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleList
   * @instance
   *
   * @param targetUrl - API-generated URL for the requested results page
   * @param callback - Callback to handle list of records
   */
  getPage(targetUrl?: string, callback?: function);
  /**
   * @description Lists SampleInstance records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function list
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  list(opts?: object, callback?: function);
  /**
   * Retrieve a single page of SampleInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function page
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  page(opts?: object, callback?: function);
}

/**
 * Options to pass to update
 *
 * @property language - An ISO language-country string of the sample.
 * @property taggedText - The text example of how end-users may express this intent. The sample may contain Field tag blocks.
 * @property sourceChannel - The communication channel the sample was captured. It can be: voice, sms, chat, alexa, google-assistant, or slack. If not included the value will be null
 */
export interface UpdateOptions {
  language?: string;
  sourceChannel?: string;
  taggedText?: string;
}

/**
 * Options to pass to update
 *
 * @property language - An ISO language-country string of the sample.
 * @property taggedText - The text example of how end-users may express this intent. The sample may contain Field tag blocks.
 * @property sourceChannel - The communication channel the sample was captured. It can be: voice, sms, chat, alexa, google-assistant, or slack. If not included the value will be null
 */
export interface UpdateOptions {
  language?: string;
  sourceChannel?: string;
  taggedText?: string;
}


declare class SamplePage extends Page {
  /**
   * @constructor Twilio.Preview.Understand.AssistantContext.IntentContext.SamplePage
   * @augments Page
   * @description Initialize the SamplePage
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Preview.Understand, response: Response<string>, solution: object);

  /**
   * Build an instance of SampleInstance
   *
   * @function getInstance
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SamplePage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class SampleInstance {
  /**
   * @constructor Twilio.Preview.Understand.AssistantContext.IntentContext.SampleInstance
   * @description Initialize the SampleContext
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @property accountSid - The unique ID of the Account that created this Sample.
   * @property dateCreated - The date that this resource was created
   * @property dateUpdated - The date that this resource was last updated
   * @property intentSid - The unique ID of the Intent associated with this Sample.
   * @property language - An ISO language-country string of the sample.
   * @property assistantSid - The unique ID of the Assistant.
   * @property sid - A 34 character string that uniquely identifies this resource.
   * @property taggedText - The text example of how end-users may express this intent. The sample may contain Field tag blocks.
   * @property url - The url
   * @property sourceChannel - The communication channel the sample was captured. It can be: voice, sms, chat, alexa, google-assistant, or slack. If not included the value will be null
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param assistantSid - The unique ID of the Assistant.
   * @param intentSid - The unique ID of the Intent associated with this Sample.
   * @param sid - The sid
   */
  constructor(version: Twilio.Preview.Understand, payload: object, assistantSid: sid, intentSid: sid, sid: sid);

  _proxy?: SampleContext;
  /**
   * fetch a SampleInstance
   *
   * @function fetch
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a SampleInstance
   *
   * @function remove
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the SampleInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleInstance
   * @instance
   */
  toJSON();
  /**
   * update a SampleInstance
   *
   * @function update
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleInstance
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}


declare class SampleContext {
  /**
   * @constructor Twilio.Preview.Understand.AssistantContext.IntentContext.SampleContext
   * @description Initialize the SampleContext
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param assistantSid - The assistant_sid
   * @param intentSid - The intent_sid
   * @param sid - The sid
   */
  constructor(version: Twilio.Preview.Understand, assistantSid: sid_like, intentSid: sid_like, sid: sid);

  /**
   * fetch a SampleInstance
   *
   * @function fetch
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a SampleInstance
   *
   * @function remove
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * update a SampleInstance
   *
   * @function update
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext.SampleContext
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}

export { SampleContext, SampleInstance, SampleList, SampleListInstance, SamplePage, SamplePayload, SampleResource, SampleSolution }
