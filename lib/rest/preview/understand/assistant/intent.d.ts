/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import deserialize = require('../../../../base/deserialize');
import values = require('../../../../base/values');
import { FieldList } from './intent/field';
import { SampleList } from './intent/sample';


/**
 * Options to pass to update
 *
 * @property friendlyName - A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.
 * @property uniqueName - A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.
 */
export interface UpdateOptions {
  friendlyName?: string;
  uniqueName?: string;
}

/**
 * Options to pass to update
 *
 * @property friendlyName - A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.
 * @property uniqueName - A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.
 */
export interface UpdateOptions {
  friendlyName?: string;
  uniqueName?: string;
}


declare class IntentPage extends Page {
  /**
   * @constructor Twilio.Preview.Understand.AssistantContext.IntentPage
   * @augments Page
   * @description Initialize the IntentPage
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Preview.Understand, response: object, solution: object);

  /**
   * Build an instance of IntentInstance
   *
   * @function getInstance
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}

declare class IntentInstance {
  /**
   * @constructor Twilio.Preview.Understand.AssistantContext.IntentInstance
   * @description Initialize the IntentContext
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @property accountSid - The unique ID of the Account that created this Intent.
   * @property dateCreated - The date that this resource was created
   * @property dateUpdated - The date that this resource was last updated
   * @property friendlyName - A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.
   * @property links - The links
   * @property assistantSid - The unique ID of the Assistant.
   * @property sid - A 34 character string that uniquely identifies this resource.
   * @property uniqueName - A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.
   * @property url - The url
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param assistantSid - The unique ID of the Assistant.
   * @param sid - The sid
   */
  constructor(version: Twilio.Preview.Understand, payload: object, assistantSid: sid, sid: sid_like);

  _proxy?: IntentContext;
  /**
   * fetch a IntentInstance
   *
   * @function fetch
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * Access the fields
   *
   * @function fields
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentInstance
   * @instance
   */
  fields();
  /**
   * remove a IntentInstance
   *
   * @function remove
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Access the samples
   *
   * @function samples
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentInstance
   * @instance
   */
  samples();
  /**
   * Produce a plain JSON object version of the IntentInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentInstance
   * @instance
   */
  toJSON();
  /**
   * update a IntentInstance
   *
   * @function update
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentInstance
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}

declare class IntentContext {
  /**
   * @constructor Twilio.Preview.Understand.AssistantContext.IntentContext
   * @description Initialize the IntentContext
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @property fields - fields resource
   * @property samples - samples resource
   *
   * @param version - Version of the resource
   * @param assistantSid - The assistant_sid
   * @param sid - The sid
   */
  constructor(version: Twilio.Preview.Understand, assistantSid: sid_like, sid: sid_like);

  /**
   * fetch a IntentInstance
   *
   * @function fetch
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  fields?: Twilio.Preview.Understand.AssistantContext.IntentContext.FieldList;
  /**
   * remove a IntentInstance
   *
   * @function remove
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  samples?: Twilio.Preview.Understand.AssistantContext.IntentContext.SampleList;
  /**
   * update a IntentInstance
   *
   * @function update
   * @memberof Twilio.Preview.Understand.AssistantContext.IntentContext
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}

export { IntentContext, IntentInstance, IntentList, IntentPage }
