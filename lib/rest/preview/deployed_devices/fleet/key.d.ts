/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import DeployedDevices = require('../../DeployedDevices');
import Page = require('../../../../base/Page');
import deserialize = require('../../../../base/deserialize');
import values = require('../../../../base/values');

/**
 * @constructor Twilio.Preview.DeployedDevices.FleetContext.KeyList
 * @description Initialize the KeyList
 * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
 *
 * @param version - Version of the resource
 * @param fleetSid - The unique identifier of the Fleet.
 */
declare function KeyList(version: DeployedDevices, fleetSid: string): KeyListInstance;

/**
 * Options to pass to update
 *
 * @property friendlyName - The human readable description for this Key.
 * @property deviceSid - The unique identifier of a Key to be authenticated.
 */
export interface UpdateOptions {
  deviceSid?: string;
  friendlyName?: string;
}

/**
 * Options to pass to update
 *
 * @property friendlyName - The human readable description for this Key.
 * @property deviceSid - The unique identifier of a Key to be authenticated.
 */
export interface UpdateOptions {
  deviceSid?: string;
  friendlyName?: string;
}


declare class KeyPage extends Page {
  /**
   * @constructor Twilio.Preview.DeployedDevices.FleetContext.KeyPage
   * @augments Page
   * @description Initialize the KeyPage
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Preview.DeployedDevices, response: object, solution: object);

  /**
   * Build an instance of KeyInstance
   *
   * @function getInstance
   * @memberof Twilio.Preview.DeployedDevices.FleetContext.KeyPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class KeyInstance {
  /**
   * @constructor Twilio.Preview.DeployedDevices.FleetContext.KeyInstance
   * @description Initialize the KeyContext
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @property sid - A string that uniquely identifies this Key.
   * @property url - URL of this Key.
   * @property friendlyName - A human readable description for this Key.
   * @property fleetSid - The unique identifier of the Fleet.
   * @property accountSid - The unique SID that identifies this Account.
   * @property deviceSid - The unique identifier of a mapped Device.
   * @property secret - The key secret.
   * @property dateCreated - The date this Key credential was created.
   * @property dateUpdated - The date this Key credential was updated.
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param fleetSid - The unique identifier of the Fleet.
   * @param sid - A string that uniquely identifies the Key.
   */
  constructor(version: Twilio.Preview.DeployedDevices, payload: object, fleetSid: sid_like, sid: sid);

  _proxy?: KeyContext;
  /**
   * fetch a KeyInstance
   *
   * @function fetch
   * @memberof Twilio.Preview.DeployedDevices.FleetContext.KeyInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a KeyInstance
   *
   * @function remove
   * @memberof Twilio.Preview.DeployedDevices.FleetContext.KeyInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the KeyInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Preview.DeployedDevices.FleetContext.KeyInstance
   * @instance
   */
  toJSON();
  /**
   * update a KeyInstance
   *
   * @function update
   * @memberof Twilio.Preview.DeployedDevices.FleetContext.KeyInstance
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}


declare class KeyContext {
  /**
   * @constructor Twilio.Preview.DeployedDevices.FleetContext.KeyContext
   * @description Initialize the KeyContext
   * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param fleetSid - The fleet_sid
   * @param sid - A string that uniquely identifies the Key.
   */
  constructor(version: Twilio.Preview.DeployedDevices, fleetSid: sid_like, sid: sid);

  /**
   * fetch a KeyInstance
   *
   * @function fetch
   * @memberof Twilio.Preview.DeployedDevices.FleetContext.KeyContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a KeyInstance
   *
   * @function remove
   * @memberof Twilio.Preview.DeployedDevices.FleetContext.KeyContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * update a KeyInstance
   *
   * @function update
   * @memberof Twilio.Preview.DeployedDevices.FleetContext.KeyContext
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}

export { KeyContext, KeyInstance, KeyList, KeyPage }
