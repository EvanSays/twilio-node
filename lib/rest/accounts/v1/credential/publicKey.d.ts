/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import Response = require('../../../../http/response');
import V1 = require('../../V1');
import { ListEachOptions, ListOptions, PageOptions } from '../../../../interfaces';
import { SerializableClass } from '../../../../interfaces';

/**
 * @description Initialize the PublicKeyList
 *
 * @param version - Version of the resource
 */
declare function PublicKeyList(version: V1): PublicKeyListInstance;

interface PublicKeyResource {
  account_sid: string;
  date_created: Date;
  date_updated: Date;
  friendly_name: string;
  sid: string;
  url: string;
}

interface PublicKeyPayload extends PublicKeyResource, Page.TwilioResponsePayload {
}

interface PublicKeySolution {
}

interface PublicKeyListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): PublicKeyContext;
  /**
   * create a PublicKeyInstance
   *
   * @function create
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  create(opts: object, callback?: function);
  /**
   * Streams PublicKeyInstance records from the API.
   *
   * This operation lazily loads records as efficiently as possible until the limit
   * is reached.
   *
   * The results are passed into the callback function, so this operation is memory efficient.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function each
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyList
   * @instance
   *
   * @param opts - ...
   * @param callback - Function to process each record
   */
  each(opts?: object, callback?: Function);
  /**
   * Constructs a public_key
   *
   * @function get
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyList
   * @instance
   *
   * @param sid - Fetch by unique Credential Sid
   */
  get(sid: string);
  /**
   * Retrieve a single target page of PublicKeyInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function getPage
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyList
   * @instance
   *
   * @param targetUrl - API-generated URL for the requested results page
   * @param callback - Callback to handle list of records
   */
  getPage(targetUrl?: string, callback?: function);
  /**
   * @description Lists PublicKeyInstance records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function list
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  list(opts?: object, callback?: function);
  /**
   * Retrieve a single page of PublicKeyInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @function page
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyList
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle list of records
   */
  page(opts?: object, callback?: function);
}

/**
 * Options to pass to update
 *
 * @property friendlyName - A human readable description of this resource
 */
export interface UpdateOptions {
  friendlyName?: string;
}

/**
 * Options to pass to update
 *
 * @property friendlyName - A human readable description of this resource
 */
export interface UpdateOptions {
  friendlyName?: string;
}


declare class PublicKeyPage extends Page {
  /**
   * @constructor Twilio.Accounts.V1.CredentialContext.PublicKeyPage
   * @augments Page
   * @description Initialize the PublicKeyPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Accounts.V1, response: Response<string>, solution: object);

  /**
   * Build an instance of PublicKeyInstance
   *
   * @function getInstance
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class PublicKeyInstance {
  /**
   * @constructor Twilio.Accounts.V1.CredentialContext.PublicKeyInstance
   * @description Initialize the PublicKeyContext
   *
   * @property sid - A 34 character string that uniquely identifies this resource.
   * @property accountSid - AccountSid the Credential resource belongs to
   * @property friendlyName - A human readable description of this resource
   * @property dateCreated - The date this resource was created
   * @property dateUpdated - The date this resource was last updated
   * @property url - The URI for this resource, relative to `https://accounts.twilio.com`
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param sid - Fetch by unique Credential Sid
   */
  constructor(version: Twilio.Accounts.V1, payload: object, sid: sid);

  _proxy?: PublicKeyContext;
  /**
   * fetch a PublicKeyInstance
   *
   * @function fetch
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a PublicKeyInstance
   *
   * @function remove
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Produce a plain JSON object version of the PublicKeyInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyInstance
   * @instance
   */
  toJSON();
  /**
   * update a PublicKeyInstance
   *
   * @function update
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyInstance
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}


declare class PublicKeyContext {
  /**
   * @constructor Twilio.Accounts.V1.CredentialContext.PublicKeyContext
   * @description Initialize the PublicKeyContext
   *
   * @param version - Version of the resource
   * @param sid - Fetch by unique Credential Sid
   */
  constructor(version: Twilio.Accounts.V1, sid: sid);

  /**
   * fetch a PublicKeyInstance
   *
   * @function fetch
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a PublicKeyInstance
   *
   * @function remove
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * update a PublicKeyInstance
   *
   * @function update
   * @memberof Twilio.Accounts.V1.CredentialContext.PublicKeyContext
   * @instance
   *
   * @param opts - ...
   * @param callback - Callback to handle processed record
   */
  update(opts?: object, callback?: function);
}

export { PublicKeyContext, PublicKeyInstance, PublicKeyList, PublicKeyListInstance, PublicKeyPage, PublicKeyPayload, PublicKeyResource, PublicKeySolution }
