/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import deserialize = require('../../../../base/deserialize');
import serialize = require('../../../../base/serialize');
import values = require('../../../../base/values');
import { EngagementContextList } from './engagement/engagementContext';
import { StepList } from './engagement/step';



declare class EngagementPage extends Page {
  /**
   * @constructor Twilio.Studio.V1.FlowContext.EngagementPage
   * @augments Page
   * @description Initialize the EngagementPage
   * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Studio.V1, response: object, solution: object);

  /**
   * Build an instance of EngagementInstance
   *
   * @function getInstance
   * @memberof Twilio.Studio.V1.FlowContext.EngagementPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}

declare class EngagementInstance {
  /**
   * @constructor Twilio.Studio.V1.FlowContext.EngagementInstance
   * @description Initialize the EngagementContext
   * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
   *
   * @property sid - The sid
   * @property accountSid - The account_sid
   * @property flowSid - The flow_sid
   * @property contactSid - The contact_sid
   * @property contactChannelAddress - The contact_channel_address
   * @property context - The context
   * @property status - The status
   * @property dateCreated - The date_created
   * @property dateUpdated - The date_updated
   * @property url - The url
   * @property links - The links
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param flowSid - The flow_sid
   * @param sid - The sid
   */
  constructor(version: Twilio.Studio.V1, payload: object, flowSid: sid, sid: sid);

  _proxy?: EngagementContext;
  /**
   * Access the engagementContext
   *
   * @function engagementContext
   * @memberof Twilio.Studio.V1.FlowContext.EngagementInstance
   * @instance
   */
  engagementContext();
  /**
   * fetch a EngagementInstance
   *
   * @function fetch
   * @memberof Twilio.Studio.V1.FlowContext.EngagementInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a EngagementInstance
   *
   * @function remove
   * @memberof Twilio.Studio.V1.FlowContext.EngagementInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  /**
   * Access the steps
   *
   * @function steps
   * @memberof Twilio.Studio.V1.FlowContext.EngagementInstance
   * @instance
   */
  steps();
  /**
   * Produce a plain JSON object version of the EngagementInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Studio.V1.FlowContext.EngagementInstance
   * @instance
   */
  toJSON();
}

declare class EngagementContext {
  /**
   * @constructor Twilio.Studio.V1.FlowContext.EngagementContext
   * @description Initialize the EngagementContext
   * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
   *
   * @property steps - steps resource
   * @property engagementContext - engagementContext resource
   *
   * @param version - Version of the resource
   * @param flowSid - The flow_sid
   * @param sid - The sid
   */
  constructor(version: Twilio.Studio.V1, flowSid: sid, sid: sid);

  engagementContext?: Twilio.Studio.V1.FlowContext.EngagementContext.EngagementContextList;
  /**
   * fetch a EngagementInstance
   *
   * @function fetch
   * @memberof Twilio.Studio.V1.FlowContext.EngagementContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * remove a EngagementInstance
   *
   * @function remove
   * @memberof Twilio.Studio.V1.FlowContext.EngagementContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback?: function);
  steps?: Twilio.Studio.V1.FlowContext.EngagementContext.StepList;
}

export { EngagementContext, EngagementInstance, EngagementList, EngagementPage }
