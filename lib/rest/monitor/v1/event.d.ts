/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../base/Page');
import V1 = require('../V1');
import deserialize = require('../../../base/deserialize');
import serialize = require('../../../base/serialize');
import values = require('../../../base/values');

/**
 * @constructor Twilio.Monitor.V1.EventList
 * @description Initialize the EventList
 *
 * @param version - Version of the resource
 */
declare function EventList(version: V1): EventListInstance;


declare class EventPage extends Page {
  /**
   * @constructor Twilio.Monitor.V1.EventPage
   * @augments Page
   * @description Initialize the EventPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Monitor.V1, response: object, solution: object);

  /**
   * Build an instance of EventInstance
   *
   * @function getInstance
   * @memberof Twilio.Monitor.V1.EventPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class EventInstance {
  /**
   * @constructor Twilio.Monitor.V1.EventInstance
   * @description Initialize the EventContext
   *
   * @property accountSid - The account_sid
   * @property actorSid - The actor_sid
   * @property actorType - The actor_type
   * @property description - A human-readable description of the event.  May be null.
   * @property eventData - The event_data
   * @property eventDate - The event_date
   * @property eventType - The event_type
   * @property resourceSid - The resource_sid
   * @property resourceType - The resource_type
   * @property sid - A 34 character string that uniquely identifies this event.
   * @property source - The originating system or interface that caused the event.  web for events caused by user action in the Twilio Console.  api for events caused through a request to the REST API.  twilio for events caused by an automated or internal Twilio system.
   * @property sourceIpAddress - The source_ip_address
   * @property url - The url
   * @property links - The links
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param sid - The sid
   */
  constructor(version: Twilio.Monitor.V1, payload: object, sid: sid);

  _proxy?: EventContext;
  /**
   * fetch a EventInstance
   *
   * @function fetch
   * @memberof Twilio.Monitor.V1.EventInstance
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
  /**
   * Produce a plain JSON object version of the EventInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Monitor.V1.EventInstance
   * @instance
   */
  toJSON();
}


declare class EventContext {
  /**
   * @constructor Twilio.Monitor.V1.EventContext
   * @description Initialize the EventContext
   *
   * @param version - Version of the resource
   * @param sid - The sid
   */
  constructor(version: Twilio.Monitor.V1, sid: sid);

  /**
   * fetch a EventInstance
   *
   * @function fetch
   * @memberof Twilio.Monitor.V1.EventContext
   * @instance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: function);
}

export { EventContext, EventInstance, EventList, EventPage }
