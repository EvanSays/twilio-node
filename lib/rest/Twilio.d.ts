/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */



/**
 * Options to pass to Twilio
 *
 * @property httpClient - The client used for http requests. Defaults to RequestClient
 * @property accountSid - The default accountSid. This is set to username if not provided
 * @property env - The environment object. Defaults to process.env
 * @property region - Twilio region to use. Defaults to none
 */
interface TwilioOptions{
  accountSid: string;
  env: Environment;
  httpClient: HttpClient;
  region: string;
}

/**
 * Options to pass to request
 *
 * @property method - The http method
 * @property uri - The request uri
 * @property username - The username used for auth
 * @property password - The password used for auth
 * @property headers - The request headers
 * @property params - The request params
 * @property data - The request data
 * @property timeout - The request timeout in milliseconds
 * @property allowRedirects - Should the client follow redirects
 */
interface requestOptions{
  allowRedirects: boolean;
  data: object;
  headers: object;
  method: string;
  params: object;
  password: string;
  timeout: int;
  uri: string;
  username: string;
}

declare class Twilio {
  /**
   * Twilio Client to interact with the Rest API
   *
   * @constructor Twilio
   *
   * @property accounts - accounts domain
   * @property api - api domain
   * @property chat - chat domain
   * @property fax - fax domain
   * @property ipMessaging - ip_messaging domain
   * @property lookups - lookups domain
   * @property monitor - monitor domain
   * @property notify - notify domain
   * @property preview - preview domain
   * @property pricing - pricing domain
   * @property proxy - proxy domain
   * @property taskrouter - taskrouter domain
   * @property trunking - trunking domain
   * @property video - video domain
   * @property messaging - messaging domain
   * @property wireless - wireless domain
   * @property sync - sync domain
   * @property studio - studio domain
   * @property addresses - addresses resource
   * @property applications - applications resource
   * @property authorizedConnectApps - authorizedConnectApps resource
   * @property availablePhoneNumbers - availablePhoneNumbers resource
   * @property calls - calls resource
   * @property conferences - conferences resource
   * @property connectApps - connectApps resource
   * @property incomingPhoneNumbers - incomingPhoneNumbers resource
   * @property keys - keys resource
   * @property messages - messages resource
   * @property newKeys - newKeys resource
   * @property newSigningKeys - newSigningKeys resource
   * @property notifications - notifications resource
   * @property outgoingCallerIds - outgoingCallerIds resource
   * @property queues - queues resource
   * @property recordings - recordings resource
   * @property signingKeys - signingKeys resource
   * @property sip - sip resource
   * @property shortCodes - shortCodes resource
   * @property tokens - tokens resource
   * @property transcriptions - transcriptions resource
   * @property usage - usage resource
   * @property validationRequests - validationRequests resource
   *
   * @param username - The username used for authentication. This is normally account sid, but if using key/secret auth will be the api key sid.
   * @param password - The password used for authentication. This is normally auth token, but if using key/secret auth will be the secret.
   * @param [opts] - ...
   * @param {HttpClient} [opts.httpClient] -
   *          The client used for http requests. Defaults to RequestClient
   * @param {string} [opts.accountSid] -
   *          The default accountSid. This is set to username if not provided
   * @param {Environment} [opts.env] -
   *          The environment object. Defaults to process.env
   * @param {string} [opts.region] - Twilio region to use. Defaults to none
   *
   * @returns {Twilio} A new instance of Twilio client
   */
  function constructor(): None

  /**
   * Makes a request to the Twilio API using the configured http client.
   * Authentication information is automatically added if none is provided.
   *
   * @param opts - The options argument
   * @param {string} opts.method - The http method
   * @param {string} opts.uri - The request uri
   * @param {string} [opts.username] - The username used for auth
   * @param {string} [opts.password] - The password used for auth
   * @param {object} [opts.headers] - The request headers
   * @param {object} [opts.params] - The request params
   * @param {object} [opts.data] - The request data
   * @param {int} [opts.timeout] - The request timeout in milliseconds
   * @param {boolean} [opts.allowRedirects] - Should the client follow redirects
   */
  function request(): null
  /**
   * Validate that a request to the new SSL certificate is successful.
   * @throws {RestException} if the request fails
   */
  function validateSslCert(): null
}

